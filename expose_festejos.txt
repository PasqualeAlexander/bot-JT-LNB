
        // Exponer funciones del sistema de festejos persistentes
        await page.exposeFunction('nodeCargarFestejos', async (authId, playerName) => {
            try {
                console.log('üéâ nodeCargarFestejos llamado:', authId, playerName);
                const result = await cargarFestejos(authId, playerName);
                console.log('üéâ nodeCargarFestejos resultado:', result);
                return result;
            } catch (error) {
                console.error('‚ùå Error en nodeCargarFestejos:', error);
                return null;
            }
        });
        
        await page.exposeFunction('nodeGuardarFestejo', async (authId, playerName, tipo, mensaje) => {
            try {
                console.log('üíæ nodeGuardarFestejo llamado:', authId, playerName, tipo, mensaje);
                const result = await guardarFestejo(authId, playerName, tipo, mensaje);
                console.log('üíæ nodeGuardarFestejo resultado:', result);
                return result;
            } catch (error) {
                console.error('‚ùå Error en nodeGuardarFestejo:', error);
                return { ok: false, error: error.message };
            }
        });
        
        await page.exposeFunction('nodeObtenerMensajeFestejo', async (authId, tipo) => {
            try {
                console.log('üéØ nodeObtenerMensajeFestejo llamado:', authId, tipo);
                const result = obtenerMensajeFestejo(authId, tipo);
                console.log('üéØ nodeObtenerMensajeFestejo resultado:', result);
                return result;
            } catch (error) {
                console.error('‚ùå Error en nodeObtenerMensajeFestejo:', error);
                return null;
            }
        });
        
        await page.exposeFunction('nodeTieneFestejos', async (authId) => {
            try {
                console.log('üîç nodeTieneFestejos llamado:', authId);
                const result = tieneFestejos(authId);
                console.log('üîç nodeTieneFestejos resultado:', result);
                return result;
            } catch (error) {
                console.error('‚ùå Error en nodeTieneFestejos:', error);
                return false;
            }
        });
        
        await page.exposeFunction('nodeLimpiarFestejos', async (authId, playerName, tipo) => {
            try {
                console.log('üßπ nodeLimpiarFestejos llamado:', authId, playerName, tipo);
                const result = await limpiarFestejos(authId, playerName, tipo);
                console.log('üßπ nodeLimpiarFestejos resultado:', result);
                return result;
            } catch (error) {
                console.error('‚ùå Error en nodeLimpiarFestejos:', error);
                return { ok: false, error: error.message };
            }
        });
